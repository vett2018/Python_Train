"""Нахождение наиболее общего делителя двух натуральных чисел А и В
из наибольшего вычитается меньшее натуральное число и разноссть записывается в большее число
до тех пор пока не два равных числа не будут равные друг другу"""
import time


def get_nod(a, b):
    """
        Функция наибольшего натурального делителя a и b
        по алгоритму Евклида.
    :param a: натуральное число
    :param b: натуральное число
    :return: НОД (Наибольший натуральный делитель)
    """
    while a != b:
        if a > b:
            a = a - b
        else:
            b = b - a
    return a #Неважно что возвращать так как a = b


def get_nod2(a, b):
    """
    Функция наибольшего натурального делителя a и b
        по быстрому алгоритму Евклида.
    :param a: натуральное число
    :param b: натуральное число
    :return: НОД (Наибольший натуральный делитель)
    """
    if a < b: #меняем местами максимальное и минимальное число (Делаем а-макс.)
        a, b = b, a

    while b != 0:
        a, b = b, a % b
    return a #Наибольший делитель евклида


def test_nod(func):
    """
    Вспомогательная функция для проверки основной функции
    :param func: параметр ссылкой на функцию get_nod
    :return:
    """
    #--- Тест №1 -------
    a = 28
    b = 35
    res = func(a, b)
    if res == 7:
        print("тест №1 - Ок")
    else:
        print("тест №1 - не ок")

    # --- Тест №2 -------
    a = 100
    b = 1
    res = func(a, b)
    if res == 1:
        print("тест №2 - Ок")
    else:
        print("тест №2 - не ок")

    # --- Тест №3 -------
    a = 2
    b = 35000000000
    st = time.time()
    res = func(a, b)
    et = time.time()
    dt = et - st
    if res == 2 and dt < 1:
        print("тест №3 - Ок")
        print(dt)
    else:
        print("тест №3 - не ок")
        print(dt)


print(get_nod2(4, 26))
test_nod(get_nod2) #ссылка на функцию get_nod

